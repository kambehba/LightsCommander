@page "/"
@using System.Threading;

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

<div class="grid">

    <div class="g1">Welcome to Kam's Lights Commander</div>
    <div class="g2">Select Pattern: </div>
    <div class="g3">
        <select onchange=@OnCommandSelected()>
            @foreach (var command in commands)
            {
                <option value="volvo">@command</option>
            }
        </select>
    </div>

    <div class="g4">
        <button @onclick="SendLightCommand">Send</button>
    </div>

    <div class="g5">
       
        <svg height="100" width="100">
            <circle cx="50" cy="50" r="40" stroke="red" stroke-width="3" fill="@_lightStatus_1" />
        </svg>
    </div>

    <div class="g6">
            <svg height="100" width="100">
                <circle cx="50" cy="50" r="40" stroke="red" stroke-width="3" fill="@_lightStatus_2" />
            </svg>
        </div>

        <div class="g7">
            <svg height="100" width="100">
                <circle cx="50" cy="50" r="40" stroke="red" stroke-width="3" fill="@_lightStatus_3" />
            </svg>
        </div>

        <div class="g8">
            <svg height="100" width="100">
                <circle cx="50" cy="50" r="40" stroke="red" stroke-width="3" fill="@_lightStatus_4" />
            </svg>
        </div>


</div>




@code {

    private List<string> commands;
    private string _lightStatus_1;
    private string _lightStatus_2;
    private string _lightStatus_3;
    private string _lightStatus_4;

    private int CurrentCount = 1000;

    protected override void OnInitialized()
    {
        commands = new List<string>();
        commands.Add(string.Empty);
        commands.Add("Left To Right");
        commands.Add("Right to Left");

        _lightStatus_1 = "white";
        _lightStatus_2 = "white";
        _lightStatus_3 = "white";
        _lightStatus_4 = "white";

    }


    void OnCommandSelected(ChangeEventArgs  e)
    {
        var selectedString = e.Value.ToString();
        Console.WriteLine("It is definitely: " + selectedString);
    }

    void SendLightCommand()
    {
        var timer = new Timer(TimeCallBack, null, 500, 800);

    }



    void TimeCallBack(object state)
    {
        if (CurrentCount > 0)
        {
            CurrentCount--;
            dothis2();
            // Note:following line is necessary because Blazor would not recognize the state change hence not refresh the UI  
            this.InvokeAsync(StateHasChanged);
        }
    }

    void dothis2()
    {
        if ( _lightStatus_1.Equals("white")) { _lightStatus_1 = "red"; return; }
        if (_lightStatus_1.Equals("red")) { _lightStatus_1 = "white"; return; }

    }




}
