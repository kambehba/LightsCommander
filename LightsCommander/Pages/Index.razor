@page "/"
@using System.Threading;
@inject IJSRuntime JsRuntime;
@using FireSharp.Config;
@using FireSharp.Interfaces;
@using FireSharp.Response;


<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">


<div class="grid">

    <h2 class="g0">PARSEN SOFTWARE</h2>
    <h2 class="g1">SOLUTIONS.</h2>
    <h3 class="g2">  Lights Commander</h3>
    <div class="g3">Commands: </div>
    <div class="g4">
        <select @bind="SelectedCommand">
            @foreach (var command in commands)
            {
            <option class="d1" value="@command">@command</option>
            }
        </select>
    </div>

    <div class="g5">
        <button class="b1" @onclick="SendLightCommand">SEND</button>
    </div>

    <div class="g6">
        <svg height="50" width="50">
            <circle id="d1" class="@Lights_css_1" cx="25" cy="25" r="20" stroke="red" stroke-width="3" />
        </svg>
    </div>

    <div class="g7">
        <svg height="50" width="50">
            <circle id="d2" class="@Lights_css_2" cx="25" cy="25" r="20" stroke="red" stroke-width="3" />
        </svg>
    </div>

    <div class="g8">
        <svg height="50" width="50">
            <circle id="d3" class="@Lights_css_3" cx="25" cy="25" r="20" stroke="red" stroke-width="3" />
        </svg>
    </div>

    <div class="g9">
        <svg height="50" width="50">
            <circle id="d4" class="@Lights_css_4" cx="25" cy="25" r="20" stroke="red" stroke-width="3" />
        </svg>
    </div>
</div>




@code {
    IFirebaseClient client;


    IFirebaseConfig config = new FirebaseConfig
    {
        AuthSecret = "II3bycCtijU0NplKxY7HoJ1e8YLtIY92PRYHdBRu",
        BasePath = "https://dazzling-torch-8270.firebaseio.com/"
    };

    private string SelectedCommand = string.Empty;
    private List<string> commands;

    private Timer timer;
    private enum CommandTypes { All_ON, ALL_OFF, LEFT_RIGHT, RIGHT_LEFT, ALL_FLASH }

    private string Lights_css_1;
    private string Lights_css_2;
    private string Lights_css_3;
    private string Lights_css_4;

    private int CurrentCount = 1000;


    protected override void OnInitialized()
    {

        SetCommandDropDownOptions();
       
        ALLOff();
    }

    private async void dothis(int id)
    {
        client = new FireSharp.FirebaseClient(config);
        if(client != null)
        {
            SetResponse response = await client.SetAsync("LightsCommander/commandId",id);
        }
    }

    void SetCommandDropDownOptions()
    {
        commands = new List<string>();
        commands.Add(string.Empty);
        commands.Add(CommandTypes.ALL_OFF.ToString());
        commands.Add(CommandTypes.All_ON.ToString());
        commands.Add(CommandTypes.LEFT_RIGHT.ToString());
        commands.Add(CommandTypes.RIGHT_LEFT.ToString());
        commands.Add(CommandTypes.ALL_FLASH.ToString());

    }

    void SendLightCommand()
    {
        ALLOff();

        if (SelectedCommand.Equals(CommandTypes.All_ON.ToString())) { Lights_css_1 = "lightsAllOn"; Lights_css_2 = "lightsAllOn"; Lights_css_3 = "lightsAllOn"; Lights_css_4 = "lightsAllOn"; dothis(1); }
        if (SelectedCommand.Equals(CommandTypes.ALL_OFF.ToString())) { Lights_css_1 = "lightsAllOff"; Lights_css_2 = "lightsAllOff"; Lights_css_3 = "lightsAllOff"; Lights_css_4 = "lightsAllOff";dothis(2); }
        if (SelectedCommand.Equals(CommandTypes.ALL_FLASH.ToString())) { Lights_css_1 = "lightsAllFlash";Lights_css_2 = "lightsAllFlash";Lights_css_3 = "lightsAllFlash";Lights_css_4 = "lightsAllFlash";dothis(3); }
        if (SelectedCommand.Equals(CommandTypes.LEFT_RIGHT.ToString())) { ALLOff(); RunLeftRight(); dothis(4);}
        if (SelectedCommand.Equals(CommandTypes.RIGHT_LEFT.ToString())) { ALLOff();  RunRightLeft();dothis(5); }

        

    }


    private void ALLOff()
    {
        Lights_css_1 = "lighthsOff";
        Lights_css_2 = "lighthsOff";
        Lights_css_3 = "lighthsOff";
        Lights_css_4 = "lighthsOff";

    }


    private async void RunLeftRight()
    {

        var result =  await JsRuntime.InvokeAsync<string>("RunLeftRight");

    }

    private async void RunRightLeft()
    {
        var result = await JsRuntime.InvokeAsync<string>("RunRightLeft");

    }


}
